import timeit
import numpy


sq_search_time_result_list = list()



def sq_search(data_list: list[int], value: int):
    for x in range(len(data_list)):
        if data_list[x] == value:
            break



length = [1000, 10000, 50000, 100000, 500000, 1000000, 5000000, 10000000]

for sq_search_len in length:

    sq_search_time_list = timeit.repeat(stmt='sq_search(arr,value_to_search)',
                                        setup='import random;from __main__ import sq_search,sq_search_len;'
                                              'arr = [random.randint(0, 10000000)for i in range(sq_search_len)];'
                                              'value_to_search = random.choice(arr)',
                                        number=1, repeat=100)

    sq_search_time_list = sorted(sq_search_time_list)[1:98:1]

    sq_search_time = numpy.mean(sq_search_time_list)

    sq_search_time_result_list.append(sq_search_time * 1000)

with open("D:/Bin/aidenoiser_res/个人算法可视化平台/查找算法/线性查找/线性查找时间数据", "w", encoding="utf-8") as f:
    for x in sq_search_time_result_list:
        f.write(f"{x}\n")
